## Database Properties
spring.datasource.url = jdbc:mysql://localhost:3306/ScriptServer?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8&creatIfNotExists=true
spring.datasource.username = root
spring.datasource.password = elephant
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.thymeleaf.enabled=false
# Check that the templates location exists.
spring.thymeleaf.check-template-location=false

# Path
server.servlet.context-path=/ScriptServer
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Enable response compression
server.compression.enabled=true

# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

server.http2.enabled=true

app.version=@project.version@
# Security props
spring.security.oauth2.client.registration.gitlab.client-id=094b772f4859c182c3edd9a1c2170aab706d6f6e6c6296b46e21d53aa66fd8a9
spring.security.oauth2.client.registration.gitlab.client-secret=1b734635dfebeaa192b77790cd59b143d6a46ce0fa6f98d078050571dc8b4a05
spring.security.oauth2.client.registration.gitlab.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.gitlab.redirect-uri-template=https://oauth.protei.ru/oauth/authorize
#spring.security.oauth2.client.registration.gitlab.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.gitlab.redirect-uri-template=http://31.207.73.134:8556/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.gitlab.redirect-uri-template=http://31.207.73.134:8556/ScriptServer/login/oauth2/code/gitlab
spring.security.oauth2.client.registration.gitlab.scope=openid,read_user,email,profile
spring.security.oauth2.client.registration.gitlab.client-name=GitLab
spring.security.oauth2.client.provider.gitlab.authorization-uri=https://oauth.protei.ru/oauth/authorize
spring.security.oauth2.client.provider.gitlab.token-uri=https://oauth.protei.ru/oauth/token
spring.security.oauth2.client.provider.gitlab.user-info-uri=https://oauth.protei.ru/oauth/userinfo
spring.security.oauth2.client.provider.gitlab.jwk-set-uri=https://oauth.protei.ru/oauth/discovery/keys

# ScriptServer props
# Задаётся только при запуске через томкат, сюда нужно вставить путь до catalina.home/
# TomcatPath=/xxx/xxx/xxx + /
# Путь до папки с конфигурационными файлами\скриптами\venv относительно корня (В случае с запуском через tomcat корень это TomcatPath, в случае с запуском через IDE это папка webapp)
scriptServerResourcesPath=/ScriptsConfig
configPath=/config
scriptsPath=/scripts
venvPath=/venvDir
requirementsPath=/requirements
repoFromGitDownlPath=/gitReposSource
defaultVenvName=defaultVenv
defaultVenvRequirementsFileName=defaultVenvRequirements.txt
scriptsGitUrl=https://git.protei.ru/api/v4/groups/623/projects